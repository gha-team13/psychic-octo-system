name: Test
on:
  workflow_call:

jobs:
  repository-setup:
    runs-on: ubuntu-latest

    steps:
      # Block 1: Repository Setup
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

  install-dependencies:
    runs-on: ubuntu-latest
    needs: repository-setup

    steps:
      # Block 2: Dependency Installation
      - name: Install Dependencies
        run: npm install
        working-directory: ./nextjs-starter

  code-quality-checks:
    runs-on: ubuntu-latest
    needs: install-dependencies

    steps:
      # Block 3: Code Quality Checks
      - name: Check for Formatting Errors
        run: npm run format

      - name: Check for ESLint Errors
        run: npm run lint

      - name: Check for Type Errors
        run: npm run typecheck

  build-setup:
    runs-on: ubuntu-latest
    needs: code-quality-checks

    steps:
      # Block 4: Build Setup
      - name: Create .env File
        run: echo "FLAGSMITH_KEY=${{ secrets.FLAGSMITH_KEY }}" > .env

      - name: Build Next.js application
        run: npm run build

      - name: Verify Build Output
        run: ls -la .next/

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: .next/

  unit-testing-and-coverage:
    runs-on: ubuntu-latest
    needs: build-setup

    steps:
      # Block 5: Unit Testing and Coverage
      - name: Run Unit Tests
        run: npm run test

      - name: Upload Coverage Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage
          path: coverage/

      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  e2e-testing:
    runs-on: ubuntu-latest
    needs: unit-testing-and-coverage

    steps:
      # Block 6: End-to-End (E2E) Testing
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run E2E Tests
        run: npm run test:e2e
        env:
          FLAGSMITH_KEY: ${{ secrets.FLAGSMITH_KEY }}

      - name: Upload Playwright Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/

  notifications:
    runs-on: ubuntu-latest
    needs: [repository-setup, install-dependencies, code-quality-checks, build-setup, unit-testing-and-coverage, e2e-testing]

    steps:
      # Block 7: Notifications
      - name: Notify Slack on Failure
        uses: slackapi/slack-github-action@v2.0.0
        if: failure()
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "ðŸš© *<https://github.com/${{github.repository}}/actions/runs/${{ github.run_id }}|${{ github.workflow }} workflow run>* failed."
                  }
                }
              ]
            }
          payload-templated: true
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: webhook-trigger
