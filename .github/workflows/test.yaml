name: Test
on:
  workflow_call:

jobs:
  # Block 1: Checkout Repository
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

  # Block 2: Setup Node.js Environment
  setup-node:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

  # Block 3: Install Dependencies
  install-dependencies:
    runs-on: ubuntu-latest
    needs: [checkout, setup-node]
    steps:
      - name: Install Dependencies
        run: npm ci

  # Block 4: Code Quality Checks
  code-quality-checks:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Check for Formatting Errors
        run: npm run format

      - name: Check for ESLint Errors
        run: npm run lint

      - name: Check for Type Errors
        run: npm run typecheck

  # Block 5: Prepare Environment for Build
  prepare-build-env:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Create .env File
        run: echo "FLAGSMITH_KEY=${{ secrets.FLAGSMITH_KEY }}" > .env

  # Block 6: Build Next.js Application
  build:
    runs-on: ubuntu-latest
    needs: prepare-build-env
    steps:
      - name: Build Next.js Application
        run: npm run build

      - name: Verify Build Output
        run: ls -la .next/

  # Block 7: Upload Build Artifacts
  upload-build-artifacts:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: .next/

  # Block 8: Unit Tests
  unit-tests:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Run Unit Tests
        run: npm run test

      - name: Upload Coverage Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage
          path: coverage/

      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  # Block 9: End-to-End (E2E) Testing
  e2e-tests:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run E2E Tests
        run: npm run test:e2e
        env:
          FLAGSMITH_KEY: ${{ secrets.FLAGSMITH_KEY }}

      - name: Upload Playwright Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/

  # Block 10: Slack Notifications on Failure
  slack-notifications:
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests]
    steps:
      - name: Notify Slack on Failure
        uses: slackapi/slack-github-action@v2.0.0
        if: failure()
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "ðŸ›‘ *<https://github.com/${{github.repository}}/actions/runs/${{ github.run_id }}|${{ github.workflow }} workflow run>* failed."
                  }
                }
              ]
            }
          payload-templated: true
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: webhook-trigger
